import telebot
from telebot import types


# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
bot = telebot.TeleBot('TOKEN')


# –û–ø–∏—Å—ã–≤–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã "/start"
@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
    btn2 = types.KeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
    markup.add(btn1, btn2)
    bot.send_message(message.chat.id,
                     text="–ü—Ä–∏–≤–µ—Ç, {0.first_name}, –Ω–∞–∂–º–∏ –Ω–∞ –∫–≤–∞–¥—Ä–∞—Ç–∏–∫ –≤ –ø—Ä–∞–≤–æ–º –Ω–∏–∂–Ω–µ–º —É–≥–ª—É(–≤–æ–∑–ª–µ —Å–º–∞–π–ª–∏–∫–æ–≤) —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã!".format(
                         message.from_user), reply_markup=markup)


@bot.message_handler(content_types=['text'])
def func(message):
    if message.text == "üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è":
        bot.send_message(message.chat.id, text="–ü—Ä–∏–≤–µ—Ç üëã, –≠—Ç–æ –ª–∏—á–Ω—ã–π –±–æ—Ç –Æ—Ä—ã –í–ª–∞—Å–µ–Ω–∫–æ!)")
    elif message.text == "‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–ö–∞–∫ –º–µ–Ω—è –∑–æ–≤—É—Ç?")
        btn2 = types.KeyboardButton("–ß—Ç–æ —è –º–æ–≥—É?")
        btn3 = types.KeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–±–æ –º–Ω–µ")
        back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(btn1, btn2, btn3, back)
        bot.send_message(message.chat.id, text="–ó–∞–¥–∞–π –º–Ω–µ –≤–æ–ø—Ä–æ—Å!", reply_markup=markup)

    elif message.text == "–ö–∞–∫ –º–µ–Ω—è –∑–æ–≤—É—Ç?":
        start(message)
        bot.send_message(message.chat.id, "–ú–µ–Ω—è –∑–æ–≤—É—Ç –Æ—Ä–∞,–¥–∞–≤–∞–π –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è?")
        start_reg(message)

    elif message.text == "–ß—Ç–æ —è –º–æ–≥—É?":
        bot.send_message(message.chat.id, text="–ú–æ–≥—É –ø–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –∏ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, –∞ —Ç–∞–∫–∂–µ –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–±–æ –º–Ω–µ üòâ")

    elif message.text == "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–±–æ –º–Ω–µ":
        bot.send_message(message.chat.id, text="–ú–µ–Ω—è –∑–æ–≤—É—Ç –Æ—Ä–∞ –í–ª–∞—Å–µ–Ω–∫–æ üë®"
                                               "–Ø –∂–∏–≤—É –≤ –≥–æ—Ä–æ–¥–µ –ë–æ–±—Ä—É–π—Å–∫ üèô"
                                               "–Ø –Ω–∞—á–∏–Ω–∞—é—â–∏–π –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç üë®‚Äçüíª")

    elif message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
        button2 = types.KeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
        markup.add(button1, button2)
        bot.send_message(message.chat.id, text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=markup)
    else:
        bot.send_message(message.chat.id, text="–ù–∞ —Ç–∞–∫—É—é –∫–æ–º–∞–Ω–¥—É —è –Ω–µ –∑–∞–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω..")


name = ''
surname = ''
age = 0


@bot.message_handler(content_types=['text'])
def start_reg(message):
    bot.send_message(message.chat.id, "–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç? ")
    bot.register_next_step_handler(message, get_name)  # —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ ‚Äì —Ñ—É–Ω–∫—Ü–∏—è get_name


def get_name(message):  # –ø–æ–ª—É—á–∞–µ–º —Ñ–∞–º–∏–ª–∏—é
    global name
    name = message.text
    bot.send_message(message.from_user.id, '–ö–∞–∫–∞—è —É —Ç–µ–±—è —Ñ–∞–º–∏–ª–∏—è?')
    bot.register_next_step_handler(message, get_surname)


def get_surname(message):
    global surname
    surname = message.text
    bot.send_message(message.from_user.id, '–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?')
    bot.register_next_step_handler(message, get_age)


def get_age(message):
    global age
    while age == 0:  # –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤–æ–∑—Ä–∞—Å—Ç –∏–∑–º–µ–Ω–∏–ª—Å—è
        try:
            age = int(message.text)  # –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–æ–∑—Ä–∞—Å—Ç –≤–≤–µ–¥–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
        except Exception:
            bot.send_message(message.from_user.id, '–¶–∏—Ñ—Ä–∞–º–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞')
            return get_surname(message)
    keyboard = types.InlineKeyboardMarkup()  # –Ω–∞—à–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    key_yes = types.InlineKeyboardButton(text='–î–∞', callback_data='yes')  # –∫–Ω–æ–ø–∫–∞ ¬´–î–∞¬ª
    keyboard.add(key_yes)  # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    key_no = types.InlineKeyboardButton(text='–ù–µ—Ç', callback_data='no')
    keyboard.add(key_no)
    question = '–¢–µ–±–µ '+str(age)+' –ª–µ—Ç, —Ç–µ–±—è –∑–æ–≤—É—Ç '+name+' '+surname+'?'
    bot.send_message(message.from_user.id, text=question, reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: True)
def callback_worker(call):
    if call.data == "yes":  # call.data —ç—Ç–æ callback_data, –∫–æ—Ç–æ—Ä—É—é –º—ã —É–∫–∞–∑–∞–ª–∏ –ø—Ä–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏ –∫–Ω–æ–ø–∫–∏
        bot.send_message(call.message.chat.id, '–ó–∞–ø–æ–º–Ω—é üòä')
    elif call.data == "no":
        bot.send_message(call.message.chat.id, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –Ω–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏–ª–∏—Å—å üòî')


# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
bot.polling(none_stop=True, interval=0)
